/* Arduino C Program auto-generated by g2c.
 * g2c is Copyright 2009, Geordie and Chris Tilt and free to use and modify.
 * original G program:

	blink pin1 every 500 msec for 50 times
	blink pin2 every 1500 msec for 1 times
	do 
		blink pin1 every 500 msec for 50 times
		blink pin1 every 500 msec for 50 times
	until 3 times
	repeat 
		blink pin3 every 1000 msec for 2000 msec
		blink pin4 every 1000 msec for 1 times
		blink pin4 every 1500 msec for 1 times
	until 2 times
	if detect pin5 is ON blink pin3 every 1000 msec for 5 times
	if detect pin5 is ON blink pin3 every 500 msec for 5 times and turn pin7 OFF
	repeat 
		if detect pin5 is ON blink pin3 every 500 msec for 3000 msec
		turn pin7 ON
		wait 2000 msec
		turn pin7 OFF
		wait 25 msec
	until 3000 msec
	do 
		blink pin4 every 1000 msec for 1 times
		blink pin4 every 1500 msec for 1 times
	while detect pin5 is OFF
*/
int pin1 = 1;
int pin2 = 2;
int pin7 = 7;
int pin3 = 3;
int pin5 = 5;

void setup() {
  pinMode(pin1, OUTPUT);
  pinMode(pin2, OUTPUT);
  pinMode(pin7, OUTPUT);
  pinMode(pin3, OUTPUT);
  pinMode(pin5, INPUT);
}

void loop() {
  #line 1 "test.g"
  int counter_1 = 0;
  long timer_0 = 0;
  while (counter_1++ < 50) {
    if (millis() - timer_0 >= 500) {
      timer_0 = millis();   // remember the last time we took action
      // if the LED is off turn it on and vice-versa.
      int value_of_pin1 = digitalRead(pin1);
      if (value_of_pin1 == LOW) {
        value_of_pin1 = HIGH;
      }
      else {
        value_of_pin1 = LOW;
      }
      digitalWrite(pin1, value_of_pin1);
    }
  }
  #line 2 "test.g"
  int counter_3 = 0;
  long timer_2 = 0;
  while (counter_3++ < 1) {
    if (millis() - timer_2 >= 1500) {
      timer_2 = millis();   // remember the last time we took action
      // if the LED is off turn it on and vice-versa.
      int value_of_pin2 = digitalRead(pin2);
      if (value_of_pin2 == LOW) {
        value_of_pin2 = HIGH;
      }
      else {
        value_of_pin2 = LOW;
      }
      digitalWrite(pin2, value_of_pin2);
    }
  }
  #line 4 "test.g"
  // do all at the same time
  int counter_4 = 0;
  while (counter_4++ < 3) {
    #line 5 "test.g"
    int counter_6 = 0;
    long timer_5 = 0;
    if (counter_6++ < 50) {
      if (millis() - timer_5 >= 500) {
        timer_5 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin1 = digitalRead(pin1);
        if (value_of_pin1 == LOW) {
          value_of_pin1 = HIGH;
        }
        else {
          value_of_pin1 = LOW;
        }
        digitalWrite(pin1, value_of_pin1);
      }
    }
    #line 6 "test.g"
    int counter_8 = 0;
    long timer_7 = 0;
    if (counter_8++ < 50) {
      if (millis() - timer_7 >= 500) {
        timer_7 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin1 = digitalRead(pin1);
        if (value_of_pin1 == LOW) {
          value_of_pin1 = HIGH;
        }
        else {
          value_of_pin1 = LOW;
        }
        digitalWrite(pin1, value_of_pin1);
      }
    }
  }
  #line 9 "test.g"
  // repeat sequentially
  int counter_9 = 0;
  while (counter_9++ < 2) {
    #line 10 "test.g"
    long timer_11 = millis() + 2000;
    long timer_10 = 0;
    while (millis() < timer_11) {
      if (millis() - timer_10 >= 1000) {
        timer_10 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin3 = digitalRead(pin3);
        if (value_of_pin3 == LOW) {
          value_of_pin3 = HIGH;
        }
        else {
          value_of_pin3 = LOW;
        }
        digitalWrite(pin3, value_of_pin3);
      }
    }
    #line 11 "test.g"
    int counter_13 = 0;
    long timer_12 = 0;
    while (counter_13++ < 1) {
      if (millis() - timer_12 >= 1000) {
        timer_12 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin4 = digitalRead(pin4);
        if (value_of_pin4 == LOW) {
          value_of_pin4 = HIGH;
        }
        else {
          value_of_pin4 = LOW;
        }
        digitalWrite(pin4, value_of_pin4);
      }
    }
    #line 12 "test.g"
    int counter_15 = 0;
    long timer_14 = 0;
    while (counter_15++ < 1) {
      if (millis() - timer_14 >= 1500) {
        timer_14 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin4 = digitalRead(pin4);
        if (value_of_pin4 == LOW) {
          value_of_pin4 = HIGH;
        }
        else {
          value_of_pin4 = LOW;
        }
        digitalWrite(pin4, value_of_pin4);
      }
    }
  }
  #line 15 "test.g"
  if (digitalRead(pin5) == HIGH) {
    int counter_17 = 0;
    long timer_16 = 0;
    while (counter_17++ < 5) {
      if (millis() - timer_16 >= 1000) {
        timer_16 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin3 = digitalRead(pin3);
        if (value_of_pin3 == LOW) {
          value_of_pin3 = HIGH;
        }
        else {
          value_of_pin3 = LOW;
        }
        digitalWrite(pin3, value_of_pin3);
      }
    }
  }
  #line 16 "test.g"
  if (digitalRead(pin5) == HIGH) {
    int counter_19 = 0;
    long timer_18 = 0;
    while (counter_19++ < 5) {
      if (millis() - timer_18 >= 500) {
        timer_18 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin3 = digitalRead(pin3);
        if (value_of_pin3 == LOW) {
          value_of_pin3 = HIGH;
        }
        else {
          value_of_pin3 = LOW;
        }
        digitalWrite(pin3, value_of_pin3);
      }
    }
    digitalWrite(pin7,LOW);
  }
  #line 18 "test.g"
  // repeat sequentially
  long timer_20 = millis() + 3000;
  while (millis() < timer_20) {
    #line 19 "test.g"
    if (digitalRead(pin5) == HIGH) {
      long timer_22 = millis() + 3000;
      long timer_21 = 0;
      while (millis() < timer_22) {
        if (millis() - timer_21 >= 500) {
          timer_21 = millis();   // remember the last time we took action
          // if the LED is off turn it on and vice-versa.
          int value_of_pin3 = digitalRead(pin3);
          if (value_of_pin3 == LOW) {
            value_of_pin3 = HIGH;
          }
          else {
            value_of_pin3 = LOW;
          }
          digitalWrite(pin3, value_of_pin3);
        }
      }
    }
    #line 20 "test.g"
    digitalWrite(pin7,HIGH);
    #line 21 "test.g"
    delay(2000);
    #line 22 "test.g"
    digitalWrite(pin7,LOW);
    #line 23 "test.g"
    delay(25);
  }
  #line 26 "test.g"
  // do all at the same time
  while (digitalRead(pin5) == LOW) {
    #line 27 "test.g"
    int counter_24 = 0;
    long timer_23 = 0;
    if (counter_24++ < 1) {
      if (millis() - timer_23 >= 1000) {
        timer_23 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin4 = digitalRead(pin4);
        if (value_of_pin4 == LOW) {
          value_of_pin4 = HIGH;
        }
        else {
          value_of_pin4 = LOW;
        }
        digitalWrite(pin4, value_of_pin4);
      }
    }
    #line 28 "test.g"
    int counter_26 = 0;
    long timer_25 = 0;
    if (counter_26++ < 1) {
      if (millis() - timer_25 >= 1500) {
        timer_25 = millis();   // remember the last time we took action
        // if the LED is off turn it on and vice-versa.
        int value_of_pin4 = digitalRead(pin4);
        if (value_of_pin4 == LOW) {
          value_of_pin4 = HIGH;
        }
        else {
          value_of_pin4 = LOW;
        }
        digitalWrite(pin4, value_of_pin4);
      }
    }
  }
}

